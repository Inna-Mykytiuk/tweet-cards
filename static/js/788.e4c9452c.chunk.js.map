{"version":3,"file":"static/js/788.e4c9452c.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","helpers/dataFollowersInString.jsx","components/ListCards/ListCards.styled.jsx","components/ListCards/ListCards.jsx","components/CarsSection/CardSection.styled.jsx","components/CarsSection/CardsSection.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport CardLogo from '../../images/CardLogo.png';\nimport TopCard from '../../images/TopCard.png';\n\nexport const Item = styled.li`\n  width: 380px;\n  height: 460px;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  background: url(${CardLogo}) 20px 20px no-repeat, url(${TopCard}) center 28px,\n    linear-gradient(\n      114.99deg,\n      rgb(71, 28, 169) -0.99%,\n      rgb(87, 54, 163) 54.28%,\n      rgb(75, 42, 153) 78.99%\n    );\n  background-repeat: no-repeat;\n  border-radius: 20px;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  width: 62px;\n  height: 62px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n`;\n\nexport const AvatarWrap = styled.div`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  left: 50%;\n  top: 50%;\n  background-color: #ebd8ff;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const DecorLine = styled.div`\n  position: relative;\n  width: 380px;\n  height: 8px;\n  top: 46%;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  left: 50%;\n  top: 62px;\n  transform: translateX(-50%);\n  color: #ebd8ff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const Tweets = styled.p`\n  margin-bottom: 16px;\n`;\n\nexport const Followers = styled.p`\n  margin-bottom: 26px;\n`;\n\nexport const ButtonFollows = styled.button`\n  width: 196px;\n  padding: 16px 0px;\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n  background-color: ${({ bgColor }) =>\n    bgColor === false ? '#EBD8FF' : '#5CD3A8'};\n  border: none;\n  cursor: pointer;\n  box-shadow: 0px 3.43693px 3.43693px 0px rgba(0, 0, 0, 0.25);\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeUser } from '../../redux/usersOperations';\nimport { dataFollowersInString } from '../../helpers/dataFollowersInString';\nimport {\n  Avatar,\n  AvatarWrap,\n  ButtonFollows,\n  DecorLine,\n  Followers,\n  InfoWrapper,\n  Item,\n  Tweets,\n} from './Card.styled';\n\n\nexport const Card = ({ avatar, tweets, followers, user, id, isFollower }) => {\n  const dispatch = useDispatch();\n  const oneUser = { avatar, tweets, user, id };\n\n  const handlerClick = () => {\n    if (!isFollower) {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers + 1,\n          isFollower: true,\n        })\n      );\n    } else {\n      dispatch(\n        changeUser({\n          ...oneUser,\n          followers: followers - 1,\n          isFollower: false,\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <DecorLine>\n        <AvatarWrap>\n          <Avatar src={avatar} alt={user} />\n        </AvatarWrap>\n        <InfoWrapper>\n          <Tweets>{tweets} Tweets</Tweets>\n          <Followers>{dataFollowersInString(followers)} Followers</Followers>\n          <ButtonFollows\n            type=\"button\"\n            onClick={handlerClick}\n            bgColor={isFollower}\n          >\n            {!isFollower ? 'Follow' : 'Following'}\n          </ButtonFollows>\n        </InfoWrapper>\n      </DecorLine>\n    </Item>\n  );\n};\n","export const dataFollowersInString = (f) => {\n  if (f.toString().length > 3) {\n    return (\n      f.toString().slice(0, f.toString().length - 3) +\n      \",\" +\n      f.toString().slice(f.toString().length - 3)\n    );\n  }\n  return f.toString();\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n","import { Card } from '../Card/Card';\nimport { List } from './ListCards.styled';\n\nexport const ListCards = ({ items }) => {\n  return (\n    <List>\n      {items?.map(item => (\n        <Card\n          key={item.id}\n          avatar={item.avatar}\n          tweets={item.tweets}\n          followers={item.followers}\n          user={item.user}\n          id={item.id}\n          isFollower={item.isFollower}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 0px;\n`;\n\nexport const CardsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Warning = styled.h3`\n  padding: 16px 10px;\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n  background-color: #ff9900;\n`;\n\n\n\n","import { LoadMoreBtn } from 'components/Buttons/Buttons';\nimport { ListCards } from 'components/ListCards/ListCards';\nimport Loader from '../Loader/Loader';\nimport {\n  CardsContainer,\n  SectionContainer,\n  // Warning,\n} from './CardSection.styled';\nimport { statusFilters } from '../../redux/statusFilters';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers } from 'redux/usersOperations';\nimport {\n  selectPagination,\n  selectState,\n  selectVisibleUsers,\n} from 'redux/usersSelectors';\nimport { setPagination } from 'redux/usersSlice';\n\nexport const CardsSection = () => {\n\n  const dispatch = useDispatch();\n  const users = useSelector(selectVisibleUsers);\n\n  const { isLoading, error, items } = useSelector(selectState);\n  const { page, limit } = useSelector(selectPagination);\n\n  const [showBtn, setShowBtn] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchUsers({ page, limit }));\n  }, [dispatch, page, limit]);\n\n  const onLoadMore = () => {\n    dispatch(setPagination({ page, limit: limit + 3 }));\n    console.log('filteredUsers:', filteredUsers.length);\n    console.log('items:', items.length);\n    console.log('limit:', limit);\n    if (limit > items.length) {\n      setShowBtn(false);\n    }\n  };\n\n  // const onLoadMore = () => {\n  //   const newLimit = limit + 3;\n  //   dispatch(setPagination({ page, limit: newLimit }));\n\n  //   // Перевіряємо, чи кількість карток досягла 21\n  //   if (newLimit >= 24) {\n  //     setShowBtn(false);\n  //   }\n  // };\n\n  const onSelectFilter = (users, filter) => {\n    switch (filter) {\n      case statusFilters.follow:\n        return users.filter(user => !user.isFollower);\n      case statusFilters.following:\n        return users.filter(user => user.isFollower);\n      default:\n        return users;\n    }\n  };\n\n  const filteredUsers = onSelectFilter(users);\n\n\n  return (\n    <>\n      <SectionContainer>\n        <CardsContainer>\n          {isLoading && !error && <Loader />}\n          <ListCards items={filteredUsers} />\n          {isLoading && <Loader />}\n        </CardsContainer>\n        {showBtn && (\n          <LoadMoreBtn onClick={onLoadMore} />\n        )}\n      </SectionContainer>\n    </>\n  );\n};\n\n","import React from 'react'\nimport { CardsSection } from 'components/CarsSection/CardsSection'\n\nconst Tweets = () => {\n  return (\n    <>\n      <CardsSection/>\n    </>\n  )\n}\n\nexport default Tweets\n"],"names":["Item","styled","CardLogo","TopCard","Avatar","AvatarWrap","DecorLine","InfoWrapper","Tweets","Followers","ButtonFollows","bgColor","Card","f","avatar","tweets","followers","user","id","isFollower","dispatch","useDispatch","oneUser","src","alt","toString","length","slice","type","onClick","changeUser","List","ListCards","items","map","item","SectionContainer","CardsContainer","CardsSection","users","useSelector","selectVisibleUsers","selectState","isLoading","error","selectPagination","page","limit","useState","showBtn","setShowBtn","useEffect","fetchUsers","filteredUsers","filter","statusFilters","onSelectFilter","Loader","setPagination","console","log"],"sourceRoot":""}